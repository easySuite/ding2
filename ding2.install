<?php
/**
 * @file
 * Setup default theme, shortcusts, roles, language, search and features.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function ding2_install() {
  // Set default variables.
  $default_theme = 'ddbasic';
  $admin_theme = 'seven';

  $t = get_t();

  //
  // Disable all themes and only active default and admin themes.
  //
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();

  // Enable themes.
  theme_enable(array($default_theme, $admin_theme));

  // Enable $default_theme.
  variable_set('theme_default', $default_theme);
  variable_set('theme_' . $default_theme . '_settings', ding2_theme_settings());

  // Enable $admin_theme.
  variable_set('admin_theme', $admin_theme);

  // Activate admin theme when editing a node.
  variable_set('node_admin_theme', '1');

  //
  // Add shortcuts to the default set on install.
  //
  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);
  $shortcut_set->links = NULL;
  $shortcut_set->links = array(
    array(
      'link_path' => 'admin/config/regional/translate',
      'link_title' => $t('Translation'),
      'weight' => -17,
    ),
    array(
      'link_path' => 'admin/appearance/settings/ddbasic',
      'link_title' => $t('Theme settings'),
      'weight' => -18,
    ),
    array(
      'link_path' => 'admin/config/user-interface/backgrounds',
      'link_title' => $t('Backgrounds'),
      'weight' => -19,
    ),
  );
  shortcut_set_save($shortcut_set);

  // Set default source language for i18n module.
  variable_set('i18n_string_source_language', 'en');

  // Disable configurable timezones for users.
  variable_set('configurable_timezones', 0);

  // Select the ding_frontpage as front page.
  variable_set('site_frontpage', 'ding_frontpage');

  //
  // Enable ting search as default.
  //
  variable_set('search_active_modules', array(
      'node' => 'node',
      'ting_search' => 'ting_search',
      'user' => 0,
      'mkdru' => 'mkdru',
    ));
  variable_set('search_default_module', 'ting_search');

  //
  // Enable the panel pages for ting objects and search.
  //
  variable_set('ting_ting_object_disabled', FALSE);
  variable_set('ting_ting_collection_disabled', FALSE);
  variable_set('page_manager_search_disabled_ting_search', FALSE);

  //
  // Allow visitor account creation, but with administrative approval.
  //
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  //
  // Enable default permissions for system roles.
  //
  try {
    user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content', 'search content'));
    user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content', 'search content'));
  }
  catch (Exception $e) {
    // If not all modules have been enabled, this may throw an exception. It
    // should not happen, but its better to carry on then halt the installation
    // at this point.
  }

  // Submit theme settings.
  module_load_include('inc', 'system', 'system.admin');
  $form_state = form_state_defaults();
  $form_state['build_info']['args'][0] = 'ddbasic';
  $form_state['values'] = array();
  $form_state['values']['scheme'] = 'classic';
  drupal_form_submit('system_theme_settings', $form_state);

  // Ignore any rebuild messages.
  node_access_needs_rebuild(FALSE);

  // Ignore any other install messages.
  drupal_get_messages();

  // Clear caches.
  drupal_flush_all_caches();
}

/**
 * Set default theme setting for ddbasic.
 *
 * @return array
 *   The default theme settings.
 */
function ding2_theme_settings() {
  return array(
    'toggle_logo' => 0,
    'toggle_name' => 1,
    'toggle_slogan' => 1,
    'toggle_node_user_picture' => 1,
    'toggle_comment_user_picture' => 1,
    'toggle_comment_user_verification' => 1,
    'toggle_favicon' => 1,
    'toggle_main_menu' => 1,
    'toggle_secondary_menu' => 1,
    'default_logo' => 1,
    'default_favicon' => 1,
    'latto_classes_menu_leaf' => 1,
    'latto_classes_menu_has_children' => 1,
    'latto_classes_menu_items_mlid' => 1,
    'main_menu_sticky' => 0,
    'load_html5js' => 1,
    'load_selectivizr' => 1,
    'load_scalefixjs' => 1,
    'load_equalize' => 1,
    'libraries_check_all' => 0,
  );
}

/**
 * Update the database with the newest translations.
 */
function ding2_translation_update() {
  // Update build-in translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/ding2/translations/da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'default');

  // Update field translation group.
  $file = new stdClass();
  $file->uri = DRUPAL_ROOT . '/profiles/ding2/translations/fields_da.po';
  $file->filename = basename($file->uri);
  _locale_import_po($file, 'da', LOCALE_IMPORT_KEEP, 'field');
}

/**
 * Enable new shortcuts.
 */
function ding2_update_7000() {
  $t = get_t();

  $shortcut_set = shortcut_set_load(SHORTCUT_DEFAULT_SET_NAME);

  $shortcut_set->links[] = array(
    'link_path' => 'admin/appearance/settings/ddbasic',
    'link_title' => $t('Theme settings'),
    'weight' => -18,
  );
  $shortcut_set->links[] = array(
    'link_path' => 'admin/config/user-interface/backgrounds',
    'link_title' => $t('Backgrounds'),
    'weight' => -19,
  );

  shortcut_set_save($shortcut_set);

  return array();
}

/**
 * Append default ddbasic theme settings.
 */
function ding2_update_7001() {
  module_load_include('inc', 'system', 'system.admin');
  $form_state = form_state_defaults();
  $form_state['build_info']['args'][0] = 'ddbasic';
  $form_state['values'] = array();
  $form_state['values']['scheme'] = 'classic';
  drupal_form_submit('system_theme_settings', $form_state);
}

/**
 * Import our own translations.
 */
function ding2_update_7002() {
  ding2_translation_update();
}

/**
 * Enable and configure the cookie module.
 */
function ding2_update_7003() {
  module_enable(array('cookiecontrol'));
  ding2_set_cookie_page();
}

/**
 * Update default OG menu links to make translation work.
 */
//function ding2_update_7004() {
//  $results = db_query("SELECT menu_name AS menu_name FROM {og_menu}");
//  foreach ($results as $row) {
//    _og_menu_default_links_set_default_links($row->menu_name, 'update');
//  }
//}
